{"version":3,"sources":["components/Header.js","components/Footer.js","components/Actions.js","components/ProjectBox.js","components/Overlay.js","pages/Home.js","App.js","serviceWorker.js","Routes.js","index.js"],"names":["Header","className","Footer","Actions","toggleOverlay","onClick","ProjectBox","emoji","title","description","Overlay","display","style","Home","to","textDecoration","color","App","props","bind","state","overlay","counter","this","setState","console","log","exact","path","component","Component","Boolean","window","location","hostname","match","Routes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.816fc708.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return ([\n    <div className=\"inner-header m-auto\">\n      <h1 className=\"alexcyphus\">\n        <span className=\"red\">a</span>\n        <span className=\"blue\">l</span>\n        <span className=\"purple\">e</span>\n        <span className=\"green\">x</span>\n        <span className=\"blue\">c</span>\n        <span className=\"purple\">y</span>\n        <span className=\"green\">p</span>\n        <span className=\"red\">h</span>\n        <span className=\"sm-font\">.</span>\n        <span className=\"yellow\">us</span>\n      </h1>\n      <p className=\"headings\">\n        <span className=\"red\">product manager</span>\n        <span> / / </span>\n        <span className=\"blue\">language nerd</span>\n        <span> / / </span>\n        <span className=\"yellow\"> software engineer</span>\n      </p>\n    </div>\n  ])\n}\n\nexport default Header\n","import React from 'react';\n\nfunction Footer() {\n  return ([\n    <div className=\"inner-footer m-auto\">\n      <p className='m-0'>üõ† Ô∏èmade from scratch with üíñ in berlin üá©üá™</p>\n      <p className='m-0'>üåö dark mode coming soon</p>\n    </div>\n  ])\n}\n\nexport default Footer\n","import React from 'react';\nimport App from '../App.js';\n\nfunction Actions({toggleOverlay}) {\n  return ([\n    <div className=\"inner-actions m-auto container\">\n      <div className=\"row\">\n        <div className=\"col-md-4 m-0\"><p className=\"m-0\">üìÑ r√©sum√© üìÑ</p></div>\n        <div className=\"col-md-4 m-0 clickable\" onClick={toggleOverlay}><p className=\"m-0\">üóÇÔ∏è projects üóÇÔ∏è</p></div>\n        <div className=\"col-md-4 m-0\"><p className=\"m-0\">üëã about me üëã</p></div>\n      </div>\n    </div>\n  ])\n}\n\nexport default Actions\n","import React from 'react';\n\nfunction ProjectBox({emoji, title, description}) {\n  return ([\n    <div className=\"col-md-6 outer-project-box\">\n      <div className=\"inner-project-box\">\n        <div className=\"project-box-header\">\n          <p className=\"emoji\">{emoji}</p>\n          <p className=\"project-title\">{title}</p>\n        </div>\n        <div className=\"project-box-content\">\n          <div className=\"m-auto\">\n          <p>{description}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n])\n}\n\nexport default ProjectBox\n","import React from 'react';\nimport ProjectBox from './ProjectBox'\n\n// <p onClick={toggleOverlay}> test</p>\n// the bubble should also be a component\n\nfunction Overlay({display, toggleOverlay}) {\n  return ([\n    <div className=\"overlay project-box-container\" style={{display: display}}>\n      <div className=\"x clickable\" onClick={toggleOverlay}><p className=\"m-0\">x</p></div>\n      <div className=\"inner-project-box-container container my-auto\">\n        <div className=\"row\">\n          <ProjectBox emoji=\"üìà\" title=\"User Personas\" description=\"Using Python + machine learning to extract knowledge from 650,000 data points\" />\n          <ProjectBox emoji=\"üÖ¥\" title=\"eProjects\" description=\"Leading a team of 15 for UBC‚Äôs largest entrepreneurship club‚Äôs best year\"/>\n        </div>\n        <div className=\"row\">\n          <ProjectBox emoji=\"üèÖ\" title=\"Certificates\" description=\"Leading the research and development of Tandem‚Äôs most successful and profitable feature ever\"/>\n          <ProjectBox emoji=\"üá®üá¥\" title=\"VICO\" description=\"Graduating from Canadian business school and starting as a Spanish speaking software engineer\"/>\n        </div>\n        <div className=\"row\">\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n        </div>\n        <div className=\"row\">\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n        </div>\n        <div className=\"row\">\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n          <ProjectBox emoji=\"‚ùì\" title=\"Coming Soon\" description=\"Coming soon\"/>\n        </div>\n      </div>\n    </div>\n  ])\n}\n\nexport default Overlay\n","import React from 'react';\nimport {Link} from \"react-router-dom\"\nimport ProjectBox from \"../components/ProjectBox\"\n\nfunction Home() {\n  return ([\n    <div >\n      <Link to=\"/\" style={{ textDecoration: 'none', color: \"black\"}}>\n        <ProjectBox emoji=\"hi\" description=\"ho\" title=\"hello\"/>\n      </Link>\n    </div>\n  ])\n}\n\nexport default Home\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport Actions from './components/Actions.js';\nimport Overlay from './components/Overlay.js';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Home from \"./pages/Home\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.state = {\n      overlay: true,\n      counter: 0\n    }\n  }\n  toggleOverlay() {\n    this.setState({overlay: !this.state.overlay});\n    console.log(this.state.overlay)\n  }\n  render() {\n    return (\n    <div className=\"app text-center\">\n    <Router exact path=\"/home\" component={Home}/>\n    <Overlay display={this.state.overlay ? 'flex' : 'none'} toggleOverlay={this.toggleOverlay}/>\n    <div style={{display: this.state.overlay ? \"none\" : \"block\"}}>\n      <div className=\"outer-header d-flex brd\">\n        <Header/>\n      </div>\n      <div className=\"outer-content d-flex brd\">\n        <div className=\"inner-content text-left\">\n          <div>\n            <p> >> hey there üëã i‚Äôm alex‚Ä® </p>\n            <p> >> i‚Äôm a üá¨üáß british / üá®üá¶ canadian currently living in berlin working @ tandem as a product manager‚Ä®</p>\n            <p>>> i previously worked at a 500 startups startup in colombia as a software engineer and interned in spain and canada</p>\n            <p>>> i speak english üá®üá¶ + spanish üá®üá¥, am learning german üá©üá™, and want to learn portuguese üáßüá∑ next‚Ä®</p>\n            <p className=\"m-0\">>> always interested to meet interesting new people and discuss interesting new things{this.state.counter}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"outer-actions d-flex brd\">\n        <Actions toggleOverlay={this.toggleOverlay} resume=\"hello\"/>\n      </div>\n      <div className=\"outer-footer d-flex\">\n        <Footer/>\n      </div>\n    </div>\n  </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport App from \"./App\";\nimport Home from \"./pages/Home\";\nimport {Route} from \"react-router-dom\"\n\nfunction Routes() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={App}/>\n      <Route exact path=\"/home\" component={Home}/>\n    </div>\n  )\n}\n\nexport default Routes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from \"react-router-dom\"\nimport Routes from \"./Routes\"\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes/>\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}